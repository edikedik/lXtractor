[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lXtractor"
dynamic = ["version"]
description = "Feature extraction library for sequences and structures"
readme = "README.md"
requires-python = ">=3.10"
license_file = { text = "LICENSE" }
keywords = [
    "bioinformatics", "structural_biology", "data_mining", "feature_extracton",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Documentation :: Sphinx",
]
authors = [
    { name = "Ivan Reveguk", email = "ivan.reveguk@gmail.com" }
]
maintainers = [
    { name = "Ivan Reveguk", email = "ivan.reveguk@gmail.com" }
]
dependencies = [
    "biotite>=0.36",
    "joblib>=1.2.0",
    "more-itertools>=10.1",
    "msgpack>=1.0.5",
    "networkx>=2.8.6",
    "numpy>=1.23",
    "toolz>=0.12",
    "tqdm>=4.64",
    "pandas>=1.5",
    "pyhmmer>=0.7.1",
    "requests>=2.28.1",
    "rustworkx>=0.13.2",
    "scipy>=1.11.3",
    "typing_extensions>=4.3.0",
]

[project.urls]
#"Homepage" = ""
"Source code" = "https://github.com/edikedik/lXtractor"
"Bug Tracker" = "https://github.com//edikedik/lXtractor/issues"

[tool.hatch]
version.path = "lXtractor/__about__.py"

[tool.hatch.build]
ignore-vcs = true
packages = ["lXtractor"]
exclude = [
    "*.gz",
    "lXtractor/resources/.*",
    "lXtractor/resources/Pfam",
    "lXtractor/resources/CCD.msgpack",
    "lXtractor/resources/sifts.tsv"
]

[tool.hatch.build.targets.wheel]
only-include = ['lXtractor']

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "lXtractor/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "test"
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
no_implicit_optional = true
exclude = ["scripts", "docs", "test"]
#plugins = ["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
module = "networkx.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "biotite.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "toolz.*"
ignore_missing_imports = true

#[[tool.mypy.overrides]]
#module = "tqdm.*"
#ignore_missing_imports = true